"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7201],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>h});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),c=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},d=function(e){var a=c(e.components);return n.createElement(s.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},p=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(t),h=r,g=p["".concat(s,".").concat(h)]||p[h]||u[h]||o;return t?n.createElement(g,i(i({ref:a},d),{},{components:t})):n.createElement(g,i({ref:a},d))}));function h(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=p;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},1262:(e,a,t)=>{t.d(a,{Z:()=>o});var n=t(7294),r=t(2263);const o=function(e){var a=e.children,t=e.fallback;return(0,r.Z)().isClient&&null!=a?n.createElement(n.Fragment,null,a()):t||null}},5505:(e,a,t)=>{t.d(a,{M:()=>o});var n=t(7294),r=t(1262),o=function(e){var a=e.commaDelimitedContributors,t=e.lastVerifiedDateString,o=e.lastVerifiedVersionString,i={Chris:"hewison-chris"},l=function(e){return n.createElement("a",{class:"header-badge",href:"https://github.com/"+i[e]},n.createElement("span",{class:"badge-avatar",style:{backgroundImage:"url('https://avatars.githubusercontent.com/"+i[e]+"')"}}),n.createElement("span",{class:"badge-label"},e))};return n.createElement(r.Z,null,(function(){return n.createElement("div",{class:"header-badges"},null!=a?a.split(",").map(l):null,function(e,a){if(null!=e&&null!=a)return n.createElement("a",{class:"header-badge"},n.createElement("span",{class:"badge-avatar emoji-avatar"},"\u2714\ufe0f"),n.createElement("span",{class:"badge-label"},"Last verified on ",n.createElement("strong",null,e)," using Agora-cl ",a))}(t,o),n.createElement("a",{class:"header-badge",href:"https://github.com/Bosagora/documentation/issues/new?title=Docs update request: "+new URL(window.location.href).pathname+"&body=Source: "+window.location.href+"%0A%0ARequest: (how can we help?)"},n.createElement("span",{class:"badge-avatar emoji-avatar"},"\u270f\ufe0f"),n.createElement("span",{class:"badge-label"},"Request an update")))}))}},1144:(e,a,t)=>{t.d(a,{M:()=>o});var n=t(7294),r=t(1262),o=function(e){return function(e){if(null==e)throw new TypeError("Cannot destructure undefined")}(e),n.createElement(r.Z,null,(function(){return n.createElement("div",{class:"update-request"},n.createElement("a",{href:"https://https://github.com/zeroone-boa/agora-cl-docs/issues/new?title=Docs update request: "+new URL(window.location.href).pathname+"&body=Source: "+window.location.href+"%0A%0ARequest: (how can we help?)"},"\ud83d\udc3c Request an update"))}))}},269:(e,a,t)=>{t.r(a),t.d(a,{contentTitle:()=>d,default:()=>g,frontMatter:()=>c,metadata:()=>u,toc:()=>p});var n=t(7462),r=t(3366),o=(t(7294),t(3905)),i=t(5505),l=t(1144),s=["components"],c={id:"agora-cl_node_api",title:"Run an archival node",sidebar_label:"Run an archival node"},d=void 0,u={unversionedId:"advanced/agora-cl_node_api",id:"advanced/agora-cl_node_api",isDocsHomePage:!1,title:"Run an archival node",description:"Using archival beacon nodes for API retrieval",source:"@site/docs/advanced/agora-cl_node_api.md",sourceDirName:"advanced",slug:"/advanced/agora-cl_node_api",permalink:"/docs/advanced/agora-cl_node_api",editUrl:"https://github.com/zeroone-boa/agora-cl-docs/edit/master/website/docs/advanced/agora-cl_node_api.md",version:"current",frontMatter:{id:"agora-cl_node_api",title:"Run an archival node",sidebar_label:"Run an archival node"},sidebar:"docs",previous:{title:"Run a slasher",permalink:"/docs/agora-cl-usage/slasher"},next:{title:"Back up & restore database",permalink:"/docs/agora-cl-usage/database-backups"}},p=[{value:"Using archival beacon nodes for API retrieval",id:"using-archival-beacon-nodes-for-api-retrieval",children:[]},{value:"Rationale",id:"rationale",children:[]},{value:"Beacon chain API information",id:"beacon-chain-api-information",children:[]},{value:"Command line/Configuration file usage:",id:"command-lineconfiguration-file-usage",children:[]}],h={toc:p};function g(e){var a=e.components,t=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},h,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)(i.M,{mdxType:"HeaderBadgesWidget"}),(0,o.kt)("h2",{id:"using-archival-beacon-nodes-for-api-retrieval"},"Using archival beacon nodes for API retrieval"),(0,o.kt)("p",null,"The Agora-cl chain is the coordinator of the Agora proof-of-stake. It is responsible for creating new blocks, ensuring their validity, and both rewarding and penalizing participating validators for their actions. This responsibility gives the Agora node full visibility of actions performed on the blockchain, and as such, can be used as a retrospective API in order to query chain information. While this could be considered analogous to log analysis, unlike in log analysis, previous states that have not had full data stored locally for review can be requested, then fetched retrospectively and queried."),(0,o.kt)("p",null,"By default, the Agora-cl node saves the state of the chain locally in a database every 2048 slots or 64 epochs. For clarity, a slot is every 12 seconds and 32 slots make an epoch. Hence the Agora node, by default, saves the state on a per 64 epochs basis. Should more detailed information on historical slots be required, these can be requested retrospectively. However, there will be a time delay whilst the data is requested and retrieved."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"If you wish to shorten the API respond delay, we recommend saving the state once per epoch. Aditional storage will be required")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"In addition to having to download the slot/epoch data there will be an increased local storage requirement, potentially by a multiple of 32 should all data be requested."))),(0,o.kt)("p",null,"The default setting will store one state per epoch, each being ~ 1Mb (or more) of data, setting the Agora node to capture all slots per epoch will increase the storage requirements to ~ 32Mb (or more) per epoch."),(0,o.kt)("h2",{id:"rationale"},"Rationale"),(0,o.kt)("p",null,"While the default setting is sufficient for regular Agora chain functionality, it is not optimized for users who query the API multiple times per slot or require historical data not available within the currently saved state. In order to avoid the delays outlined above when retrieving data, the Agora node can be configured to save the state for each slot. ",(0,o.kt)("strong",{parentName:"p"},"This will significantly improve performance for users creating multiple requests of local beacon nodes.")),(0,o.kt)("h2",{id:"beacon-chain-api-information"},"Beacon chain API information"),(0,o.kt)("p",null,"Full details of the Agora-cl API are available here:"),(0,o.kt)("p",null,"The Agora-cl documenation portal ","[Agora public API]"," (/docs/how-agora-cl-works/agora-cl-public-api)"),(0,o.kt)("h2",{id:"command-lineconfiguration-file-usage"},"Command line/Configuration file usage:"),(0,o.kt)("p",null,"Setting the Agora node to save the state for each slot can be done both on the command line and through the configuration file as outlined below."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Using Linux/MacOS based systems")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"./agora-cl.sh beacon-chain --slots-per-archive-point=32\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Using Windows based systems")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"agora-cl.bat beacon-chain --slots-per-archive-point=32\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Using the Configuration file:")),(0,o.kt)("p",null,"If you are running Agora-cl and specifying command line flags via a configuration file such as ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"/home/beacon/config.yaml"))," on Linux or MacOS or ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"c:\\agora-cl\\beacon\\config.yaml"))," on Windows, you can add the following to that file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"slots-per-archive-point: 32\n")),(0,o.kt)(l.M,{mdxType:"RequestUpdateWidget"}))}g.isMDXComponent=!0}}]);