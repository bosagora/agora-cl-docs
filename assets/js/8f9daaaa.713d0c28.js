"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8547],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,h=p["".concat(l,".").concat(m)]||p[m]||u[m]||o;return n?a.createElement(h,s(s({ref:t},d),{},{components:n})):a.createElement(h,s({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1262:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),r=n(2263);const o=function(e){var t=e.children,n=e.fallback;return(0,r.Z)().isClient&&null!=t?a.createElement(a.Fragment,null,t()):n||null}},5505:(e,t,n)=>{n.d(t,{M:()=>o});var a=n(7294),r=n(1262),o=function(e){var t=e.commaDelimitedContributors,n=e.lastVerifiedDateString,o=e.lastVerifiedVersionString,s={Chris:"hewison-chris"},i=function(e){return a.createElement("a",{class:"header-badge",href:"https://github.com/"+s[e]},a.createElement("span",{class:"badge-avatar",style:{backgroundImage:"url('https://avatars.githubusercontent.com/"+s[e]+"')"}}),a.createElement("span",{class:"badge-label"},e))};return a.createElement(r.Z,null,(function(){return a.createElement("div",{class:"header-badges"},null!=t?t.split(",").map(i):null,function(e,t){if(null!=e&&null!=t)return a.createElement("a",{class:"header-badge"},a.createElement("span",{class:"badge-avatar emoji-avatar"},"\u2714\ufe0f"),a.createElement("span",{class:"badge-label"},"Last verified on ",a.createElement("strong",null,e)," using Agora-cl ",t))}(n,o),a.createElement("a",{class:"header-badge",href:"https://github.com/Bosagora/documentation/issues/new?title=Docs update request: "+new URL(window.location.href).pathname+"&body=Source: "+window.location.href+"%0A%0ARequest: (how can we help?)"},a.createElement("span",{class:"badge-avatar emoji-avatar"},"\u270f\ufe0f"),a.createElement("span",{class:"badge-label"},"Request an update")))}))}},4787:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>d,toc:()=>u});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),s=n(5505),i=["components"],l={id:"phase0",title:"Security audits",sidebar_label:"Security audits"},c=void 0,d={unversionedId:"audits/phase0",id:"audits/phase0",isDocsHomePage:!1,title:"Security audits",description:"Agora-cl is a fork of the Prysm open source implementation of the Ethereum Proof of Stake consensus client.",source:"@site/docs/audits/phase0.md",sourceDirName:"audits",slug:"/audits/phase0",permalink:"/docs/audits/phase0",editUrl:"https://github.com/zeroone-boa/agora-cl-docs/edit/master/website/docs/audits/phase0.md",version:"current",frontMatter:{id:"phase0",title:"Security audits",sidebar_label:"Security audits"},sidebar:"docs",previous:{title:"End-to-end tests",permalink:"/docs/devtools/end-to-end"},next:{title:"Agora-cl License",permalink:"/docs/licenses/bosagora"}},u=[{value:"Quantstamp",id:"quantstamp",children:[]},{value:"Trail of Bits",id:"trail-of-bits",children:[]}],p={toc:u};function m(e){var t=e.components,l=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(s.M,{mdxType:"HeaderBadgesWidget"}),(0,o.kt)("p",null,"Agora-cl is a fork of the Prysm open source implementation of the Ethereum Proof of Stake consensus client.\nPrysmatic Labs' implementation for Phase 0 of Ethereum proof-of-stake has received the following audits."),(0,o.kt)("h2",{id:"quantstamp"},"Quantstamp"),(0,o.kt)("p",null,'Quantstamp has reviewed the whole codebase of the Prysm client implementation. We have found a number of issues spanning all severity levels. Some of the high severity issues\nwere resolved before completion of the review. Overall the code is well-written. There are many ways, however, in which it can be improved to follow best practices. For example, code\nclones are relatively common. Furthermore, despite being mostly self-documenting, inline code documentation is lacking. We have no doubt that it would be useful for future contributors.\nDespite being accompanied by the official ETH 2.0 documentation, the implementation is very nuanced and complex. The code does not always follow the specification (or it is not clear\nthat it does). We found a number of issues that span both the specification and the implementation. Although we aggregated some of them in the "Adherence to Specification" section,\nthey are of utmost importance and we highly recommend addressing each and every of them as if they were actual vulnerabilities.'),(0,o.kt)("p",null,"Finally, many pieces of the code lack unit tests, and hence, relatively low coverage. We highly recommend adding meaningful unit tests and improving the coverage to maximize code\nquality."),(0,o.kt)("p",null,"Update: the team addressed almost all of the findings. Mapping between issues and solutions is present in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/prysmaticlabs/prysm/pull/6327"},"PR#6327"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Status"),": Completed"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Completion Date"),": October 13, 2020"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Report link"),": ",(0,o.kt)("a",{target:"_blank",href:n(4208).Z},"Quantstamp - Prysm Phase 0 Final Report.pdf")),(0,o.kt)("h2",{id:"trail-of-bits"},"Trail of Bits"),(0,o.kt)("p",null,"From September 8 through October 2, 2020, the Ethereum Foundation and Prysmatic Labs\nengaged Trail of Bits to review the security of Prysm. Trail of Bits conducted this\nassessment over the course of 8 person-weeks with three engineers working from\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/prysmaticlabs/prysm/tree/245c18784eda370ea3218e8704651edad763978d"},"245c18784eda370ea3218e8704651edad763978d")," from the Prysm repository.\nDuring the first week, Trail of Bits familiarized ourselves with the codebase build and test\nsystems, investigated fuzzing targets, and ran the existing fuzzers with no crashes. We ran\nautomated tools to produce jumping off points for investigation including, but not limited\nto, gosec, errcheck, ineffassign, semgrep, and the unit tests with the race detector\nenabled."),(0,o.kt)("p",null,"Week two included shadowing investigation, arithmetic operation and overflow checks, and\nmanual review of the slashing code. We also inspected the results from the previous weeks\u2019\ntools with deeper scrutiny."),(0,o.kt)("p",null,"Week three Trail of Bits continued assessing the slashing and slashing protection code. We\nbegan mapping specs against the project and manual code reading of the\nbeacon-chain/core package. Finally, week three encompassed manual checks for best Go\npractices and known libraries whose misuse could produce bugs."),(0,o.kt)("p",null,"During the fourth week, we continued to review the specification, looking for areas\nwhere Prysm may have diverged. We focused on the p2p and sync packages for potential\ndenial of service attacks. Finally, we revisited the copy-on-write mechanism used for\nbeacon-chain states."),(0,o.kt)("p",null,"Our efforts resulted in 26 findings ranging from high to informational severity. The single\nhigh-severity issue describes a failure scenario that causes a user\u2019s raw password to be\nlogged (TOB-PRYSM-008). A few interesting medium-severity issues include missed deposits\ndue to a premature loop exit (TOB-PRYSM-015) and preserving genesis state even on\nmethod failure (TOB-PRYSM-011)."),(0,o.kt)("p",null,"In addition to our findings, there is an appendix (C. Code Quality Recommendations) that\naddresses issues that have not produced bugs, but are of concern.\nOverall, the Prysm project can improve by focusing on best Go practices and tools to\nsupport them in order to remove risk of logic errors. We recommend extending the test\nsuite to include more failing cases and develop more fuzzers to improve coverage of\nmultiple scenarios."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Status"),": Completed"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Completion Date"),": October 6, 2020"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Report link"),": ",(0,o.kt)("a",{target:"_blank",href:n(696).Z},"Trail of Bits - Prysm Phase 0 Final Report.pdf")))}m.isMDXComponent=!0},4208:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/Quantstamp_Prysm_Phase_0_Final_Report-d70b22fbd999b05e34346a2505782619.pdf"},696:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/Trail_of_Bits_Prysm_Phase_0_Final_Report-ff2b2307a648f6b23dea9ed119b1516f.pdf"}}]);