"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6820],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,k=p["".concat(s,".").concat(m)]||p[m]||d[m]||l;return n?a.createElement(k,r(r({ref:t},c),{},{components:n})):a.createElement(k,r({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,r=new Array(l);r[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,r[1]=i;for(var u=2;u<l;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1262:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),o=n(2263);const l=function(e){var t=e.children,n=e.fallback;return(0,o.Z)().isClient&&null!=t?a.createElement(a.Fragment,null,t()):n||null}},8215:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294);const o=function(e){var t=e.children,n=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:o},t)}},5064:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(7294),o=n(9443);const l=function(){var e=(0,a.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e};var r=n(6010);const i="tabItem_1uMI",s="tabItemActive_2DSg";var u=37,c=39;const d=function(e){var t=e.lazy,n=e.block,o=e.defaultValue,d=e.values,p=e.groupId,m=e.className,k=l(),h=k.tabGroupChoices,g=k.setTabGroupChoices,y=(0,a.useState)(o),v=y[0],b=y[1],f=a.Children.toArray(e.children),w=[];if(null!=p){var T=h[p];null!=T&&T!==v&&d.some((function(e){return e.value===T}))&&b(T)}var x=function(e){var t=e.currentTarget,n=w.indexOf(t),a=d[n].value;b(a),null!=p&&(g(p,a),setTimeout((function(){var e,n,a,o,l,r,i,u;(e=t.getBoundingClientRect(),n=e.top,a=e.left,o=e.bottom,l=e.right,r=window,i=r.innerHeight,u=r.innerWidth,n>=0&&l<=u&&o<=i&&a>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(s),setTimeout((function(){return t.classList.remove(s)}),2e3))}),150))},N=function(e){var t,n;switch(e.keyCode){case c:var a=w.indexOf(e.target)+1;n=w[a]||w[0];break;case u:var o=w.indexOf(e.target)-1;n=w[o]||w[w.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},m)},d.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,className:(0,r.Z)("tabs__item",i,{"tabs__item--active":v===t}),key:t,ref:function(e){return w.push(e)},onKeyDown:N,onFocus:x,onClick:x},n)}))),t?(0,a.cloneElement)(f.filter((function(e){return e.props.value===v}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==v})}))))}},9443:(e,t,n)=>{n.d(t,{Z:()=>a});const a=(0,n(7294).createContext)(void 0)},1144:(e,t,n)=>{n.d(t,{M:()=>l});var a=n(7294),o=n(1262),l=function(e){return function(e){if(null==e)throw new TypeError("Cannot destructure undefined")}(e),a.createElement(o.Z,null,(function(){return a.createElement("div",{class:"update-request"},a.createElement("a",{href:"https://https://github.com/zeroone-boa/agora-cl-docs/issues/new?title=Docs update request: "+new URL(window.location.href).pathname+"&body=Source: "+window.location.href+"%0A%0ARequest: (how can we help?)"},"\ud83d\udc3c Request an update"))}))}},5042:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>A,default:()=>C,frontMatter:()=>N,metadata:()=>I,toc:()=>Z});var a=n(7462),o=n(3366),l=(n(7294),n(3905)),r=n(5064),i=n(8215),s=(n(7237),n(7033)),u=["components"],c={toc:[{value:"Select a configuration",id:"select-a-configuration",children:[]},{value:"Introduction",id:"introduction",children:[]}]};function d(e){var t=e.components,n=(0,o.Z)(e,u);return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Already running a node?")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"This guidance is targeted at new users. If you're already running a node, see ",(0,l.kt)("a",{parentName:"p",href:"/docs/prepare-for-merge"},"Prepare for The Merge"),"."))),(0,l.kt)("h2",{id:"select-a-configuration"},"Select a configuration"),(0,l.kt)("p",null,"If you're looking for the simplest configuration, select ",(0,l.kt)("inlineCode",{parentName:"p"},"Agora-el")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"IPC"),":"),(0,l.kt)(s.ZP,{mdxType:"MultidimensionalContentControlsPartial"}),(0,l.kt)("h2",{id:"introduction"},"Introduction"),(0,l.kt)("p",null,"Agora-cl is an implementation of the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/ethereum/consensus-specs"},"Ethereum proof-of-stake consensus specification"),". In this quickstart, you\u2019ll use Agora-cl to run an Agora-cl node and optionally a validator. This will let you stake 40,000 BOA using hardware that you manage."),(0,l.kt)("p",null,"This is a beginner-friendly guide. Familiarity with the command line is expected, but otherwise this guide makes no assumptions about your technical skills or prior knowledge."),(0,l.kt)("p",null,"At a high level, we'll walk through the following flow:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Configure an ",(0,l.kt)("strong",{parentName:"li"},"Agora execution node")," using Agora-el, an execution-layer client."),(0,l.kt)("li",{parentName:"ol"},"Configure an ",(0,l.kt)("strong",{parentName:"li"},"Agora consensus node")," using Agora-cl, a consensus-layer client."),(0,l.kt)("li",{parentName:"ol"},"Configure an ",(0,l.kt)("strong",{parentName:"li"},"Agora validator")," and stake BOA using Agora-validator (optional).")),(0,l.kt)("br",null),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Knowledge Check")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},(0,l.kt)("strong",{parentName:"p"},"Not familiar with nodes, networks, and related terminology?")," Consider reading ",(0,l.kt)("a",{parentName:"p",href:"/docs/concepts/nodes-networks"},"Nodes and networks")," before proceeding."))))}d.isMDXComponent=!0;var p=n(6884),m=n(9926),k=["components"],h={toc:[]};function g(e){var t=e.components,n=(0,o.Z)(e,k);return(0,l.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Create a folder called ",(0,l.kt)("inlineCode",{parentName:"p"},"agora")," on your SSD, and then two subfolders within it: ",(0,l.kt)("inlineCode",{parentName:"p"},"consensus")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"execution"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\ud83d\udcc2agora\n\u2523 \ud83d\udcc2consensus\n\u2523 \ud83d\udcc2execution\n")),(0,l.kt)(r.Z,{groupId:"os",defaultValue:"others",values:[{label:"Windows",value:"win"},{label:"Linux, MacOS, Arm64",value:"others"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"win",mdxType:"TabItem"},(0,l.kt)("p",null,"Navigate to your ",(0,l.kt)("code",null,"consensus")," directory and run the following commands:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"mkdir -p agora\\consensus && cd agora\\consensus\ncurl https://raw.githubusercontent.com/zeroone-boa/agora-cl/agora_v3.1.1/prysm.bat --output agora-cl.bat\nreg add HKCU\\Console /v VirtualTerminalLevel /t REG_DWORD /d 1\n")),(0,l.kt)("p",null,"This will download the Agora-cl client and update your registry to enable verbose logging.")),(0,l.kt)(i.Z,{value:"others",mdxType:"TabItem"},(0,l.kt)("p",null,"Navigate to your ",(0,l.kt)("code",null,"consensus")," directory and run the following commands:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"mkdir agora/consensus && cd agora/consensus\ncurl https://raw.githubusercontent.com/zeroone-boa/agora-cl/agora_v3.1.1/prysm.sh --output agora-cl.sh && chmod +x agora-cl.sh\n")),(0,l.kt)("p",null,"This will download the Agora-cl client and make it executable."))),(0,l.kt)(r.Z,{groupId:"protocol",defaultValue:"jwt",values:[{label:"JWT",value:"jwt"},{label:"IPC",value:"ipc"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"jwt",mdxType:"TabItem"},(0,l.kt)("h3",null,"Generate JWT Secret"),(0,l.kt)(m.ZP,{mdxType:"JwtGenerationPartial"}),(0,l.kt)("p",null,"This guide assumes that you've placed your ",(0,l.kt)("inlineCode",{parentName:"p"},"jwt.hex")," file in your ",(0,l.kt)("inlineCode",{parentName:"p"},"consensus")," directory, but you can place it anywhere and revise the below commands as needed."))))}g.isMDXComponent=!0;var y=n(6991),v=n(617),b=["components"],f={toc:[]};function w(e){var t=e.components,n=(0,o.Z)(e,b);return(0,l.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Next, we'll create your validator keys with the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/zeroone-boa/agora-deposit-cli"},"Agora Staking Deposit Client"),"."),(0,l.kt)("p",null,"Download the latest stable version of the deposit client from the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/zeroone-boa/agora-deposit-cli/releases"},"Agora Staking Deposit Client Releases page"),"."),(0,l.kt)(r.Z,{groupId:"os",defaultValue:"others",values:[{label:"Windows",value:"win"},{label:"Linux, MacOS, Arm64",value:"others"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"win",mdxType:"TabItem"},(0,l.kt)("p",null,"Run the following command to create your mnemonic (a unique and ",(0,l.kt)("strong",null,"highly sensitive")," 24-word phrase) and keys:"),(0,l.kt)(r.Z,{groupId:"network",defaultValue:"mainnet",values:[{label:"Mainnet",value:"mainnet"},{label:"Testnet",value:"testnet"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"mainnet",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",null,"deposit.exe new-mnemonic --num_validators=1 --mnemonic_language=english"))),(0,l.kt)(i.Z,{value:"testnet",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",null,"deposit.exe new-mnemonic --num_validators=1 --mnemonic_language=english --chain=testnet")))),(0,l.kt)("p",null,"Follow the CLI prompts to generate your keys. This will give you the following artifacts:"),(0,l.kt)("ol",null,(0,l.kt)("li",null,"A ",(0,l.kt)("strong",null,"new mnemonic seed phrase"),". This is ",(0,l.kt)("strong",null,"highly sensitive")," and should never be exposed to other people or networked hardware."),(0,l.kt)("li",null,"A ",(0,l.kt)("code",null,"validator_keys")," folder. This folder will contain two files:",(0,l.kt)("ol",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"deposit_data-*.json")," - contains deposit data that you\u2019ll later upload to the Agora launchpad."),(0,l.kt)("li",null,(0,l.kt)("code",null,"keystore-m_*.json")," - contains your public key and encrypted private key.")))),(0,l.kt)("p",null,"Copy the ",(0,l.kt)("code",null,"validator_keys")," folder to your primary machine's ",(0,l.kt)("code",null,"consensus")," folder. Run the following command to import your keystores, replacing ",(0,l.kt)("code",null,"<YOUR_FOLDER_PATH>")," with the full path to your ",(0,l.kt)("code",null,"consensus/validator_keys")," folder:"),(0,l.kt)(r.Z,{groupId:"network",defaultValue:"mainnet",values:[{label:"Mainnet",value:"mainnet"},{label:"Testnet",value:"testnet"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"mainnet",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",null,"agora-cl.bat validator accounts import --keys-dir=<YOUR_FOLDER_PATH>")),(0,l.kt)("p",null,"You\u2019ll be prompted to specify a wallet directory twice. Provide the path to your ",(0,l.kt)("code",null,"consensus")," folder for both prompts. You should see ",(0,l.kt)("code",null,"Successfully imported 1 accounts, view all of them by running accounts list")," when your account has been successfully imported into Agora-cl."),(0,l.kt)("p",null,"Next, go to the ",(0,l.kt)("a",{href:"https://agora-staking.bosagora.org/en/upload-deposit-data"},"Mainnet staking launchpad\u2019s deposit data upload page")," and upload your ",(0,l.kt)("code",null,"deposit_data-*.json")," file. You\u2019ll be prompted to connect your wallet."),(0,l.kt)("p",null,"You can then deposit 40,000 BOA into the Mainnet deposit contract via the staking launchpad page. Exercise extreme caution throughout this procedure."),(0,l.kt)("p",null,"Finally, run the following command to start your validator, replacing ",(0,l.kt)("code",null,"<YOUR_FOLDER_PATH>")," with the full path to your ",(0,l.kt)("code",null,"consensus")," folder:"),(0,l.kt)("pre",null,(0,l.kt)("code",null,"agora-cl.bat validator --wallet-dir=<YOUR_FOLDER_PATH>"))),(0,l.kt)(i.Z,{value:"testnet",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",null,"agora-cl.bat validator accounts import --keys-dir=<YOUR_FOLDER_PATH> --testnet")),(0,l.kt)("p",null,"You\u2019ll be prompted to specify a wallet directory twice. Provide the path to your ",(0,l.kt)("code",null,"consensus")," folder for both prompts. You should see ",(0,l.kt)("code",null,"Successfully imported 1 accounts, view all of them by running accounts list")," when your account has been successfully imported into Agora-cl."),(0,l.kt)("p",null,"Next, go to the ",(0,l.kt)("a",{href:"https://testnet-agora-staking.bosagora.org/en/upload-deposit-data"},"Agora Testnet staking launchpad\u2019s deposit data upload page")," and upload your ",(0,l.kt)("code",null,"deposit_data-*.json")," file. You\u2019ll be prompted to connect your wallet."),(0,l.kt)("p",null,"If you need Testnet BOA, head over to one of the following Telegram server:"),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("a",{href:"https://t.me/bosagora_eng"},"Bosagora Telegram"))),(0,l.kt)("p",null,"Someone should be able to give you the Testnet BOA you need. You can then deposit 40,000 BOA into the Agora testnet\u2019s deposit contract via the staking launchpad page. Exercise extreme caution throughout this procedure - ",(0,l.kt)("strong",null,"never send real BOA to the testnet deposit contract.")," Finally, run the following command to start your validator, replacing ",(0,l.kt)("code",null,"<YOUR_FOLDER_PATH>")," with the full path to your ",(0,l.kt)("code",null,"consensus")," folder:"),(0,l.kt)("pre",null,(0,l.kt)("code",null,"agora-cl.bat validator --wallet-dir=<YOUR_FOLDER_PATH> --testnet"))))),(0,l.kt)(i.Z,{value:"others",mdxType:"TabItem"},(0,l.kt)("p",null,"Run the following command to create your mnemonic phrase and keys:"),(0,l.kt)(r.Z,{groupId:"network",defaultValue:"mainnet",values:[{label:"Mainnet",value:"mainnet"},{label:"Testnet",value:"testnet"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"mainnet",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",null,"./deposit new-mnemonic --num_validators=1 --mnemonic_language=english"))),(0,l.kt)(i.Z,{value:"testnet",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",null,"./deposit new-mnemonic --num_validators=1 --mnemonic_language=english --chain=testnet")))),(0,l.kt)("p",null,"Follow the CLI prompts to generate your keys. This will give you the following artifacts:"),(0,l.kt)("ol",null,(0,l.kt)("li",null,"A ",(0,l.kt)("strong",null,"new mnemonic seed phrase"),". This is ",(0,l.kt)("strong",null,"highly sensitive")," and should never be exposed to other people or networked hardware."),(0,l.kt)("li",null,"A ",(0,l.kt)("code",null,"validator_keys")," folder. This folder will contain two files:",(0,l.kt)("ol",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"deposit_data-*.json")," - contains deposit data that you\u2019ll later upload to the Ethereum launchpad."),(0,l.kt)("li",null,(0,l.kt)("code",null,"keystore-m_*.json")," - contains your public key and encrypted private key.")))),(0,l.kt)("p",null,"Copy the ",(0,l.kt)("code",null,"validator_keys")," folder to your primary machine's ",(0,l.kt)("code",null,"consensus")," folder. Run the following command to import your keystores, replacing ",(0,l.kt)("code",null,"<YOUR_FOLDER_PATH>")," with the full path to your ",(0,l.kt)("code",null,"consensus/validator_keys")," folder:"),(0,l.kt)(r.Z,{groupId:"network",defaultValue:"mainnet",values:[{label:"Mainnet",value:"mainnet"},{label:"Testnet",value:"testnet"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"mainnet",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",null,"./agora-cl.sh validator accounts import --keys-dir=<YOUR_FOLDER_PATH>")),(0,l.kt)("p",null,"You\u2019ll be prompted to specify a wallet directory twice. Provide the path to your ",(0,l.kt)("code",null,"consensus")," folder for both prompts. You should see ",(0,l.kt)("code",null,"Successfully imported 1 accounts, view all of them by running accounts list")," when your account has been successfully imported into Agora-cl."),(0,l.kt)("p",null,"Next, go to the ",(0,l.kt)("a",{href:"https://agora-staking.bosagora.org/en/upload-deposit-data"},"Mainnet staking launchpad\u2019s deposit data upload page")," and upload your ",(0,l.kt)("code",null,"deposit_data-*.json")," file. You\u2019ll be prompted to connect your wallet."),(0,l.kt)("p",null,"You can then deposit 40,000 BOA into the Mainnet deposit contract via the staking launchpad page. Exercise extreme caution throughout this procedure. Finally, run the following command to start your validator, replacing ",(0,l.kt)("code",null,"<YOUR_FOLDER_PATH>")," with the full path to your ",(0,l.kt)("code",null,"consensus")," folder:"),(0,l.kt)("pre",null,(0,l.kt)("code",null,"./agora-cl.sh validator --wallet-dir=<YOUR_FOLDER_PATH>"))),(0,l.kt)(i.Z,{value:"testnet",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",null,"./agora-cl.sh validator accounts import --keys-dir=<YOUR_FOLDER_PATH> --testnet")),(0,l.kt)("p",null,"You\u2019ll be prompted to specify a wallet directory twice. Provide the path to your ",(0,l.kt)("code",null,"consensus")," folder for both prompts. You should see ",(0,l.kt)("code",null,"Successfully imported 1 accounts, view all of them by running accounts list")," when your account has been successfully imported into Agora-cl."),(0,l.kt)("p",null,"Next, go to the ",(0,l.kt)("a",{href:"https://goerli.launchpad.ethereum.org/en/upload-deposit-data"},"Agora Testnet staking launchpad\u2019s deposit data upload page")," and upload your ",(0,l.kt)("code",null,"deposit_data-*.json")," file. You\u2019ll be prompted to connect your wallet."),(0,l.kt)("p",null,"If you need Testnet BOA, head over to :"),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("a",{href:"https://t.me/bosagora_eng"},"Bosagora Telegram"))),(0,l.kt)("p",null,"Someone should be able to give you the Testnet BOA you need. You can then deposit 40,000 BOA into the Agota testnet\u2019s deposit contract via the staking launchpad page. Exercise extreme caution throughout this procedure - ",(0,l.kt)("strong",null,"never send real BOA to the testnet deposit contract."),"  Finally, run the following command to start your validator, replacing ",(0,l.kt)("code",null,"<YOUR_FOLDER_PATH>")," with the full path to your ",(0,l.kt)("code",null,"consensus")," folder:"),(0,l.kt)("pre",null,(0,l.kt)("code",null,"./agora-cl.sh validator --wallet-dir=<YOUR_FOLDER_PATH> --testnet")))))),(0,l.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Congratulations!")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"You\u2019re now running a ",(0,l.kt)("strong",null,"full Agora consensus node")," and a ",(0,l.kt)("strong",null,"validator"),"."))),(0,l.kt)("p",null,"It can a long time (from days to months) for your validator to become fully activated as there are a limitied number of validators allowed to join each Epoch. See ",(0,l.kt)("a",{parentName:"p",href:"/docs/monitoring/checking-status"},"Check node and validator status")," for detailed status monitoring guidance."),(0,l.kt)("p",null,"You can leave your ",(0,l.kt)("strong",{parentName:"p"},"execution client"),", ",(0,l.kt)("strong",{parentName:"p"},"Agora node"),", and ",(0,l.kt)("strong",{parentName:"p"},"validator client")," terminal windows open and running. Once your validator is activated, it will automatically begin proposing and validating blocks."))}w.isMDXComponent=!0;var T=n(1144),x=["components"],N={id:"install-with-script",title:"Quickstart: Run a node and (optionally) stake BOA using Agora-cl",sidebar_label:"Quickstart: Run a node"},A=void 0,I={unversionedId:"install/install-with-script",id:"install/install-with-script",isDocsHomePage:!1,title:"Quickstart: Run a node and (optionally) stake BOA using Agora-cl",description:"Step 1: Review prerequisites and best practices",source:"@site/docs/install/install-with-script.md",sourceDirName:"install",slug:"/install/install-with-script",permalink:"/docs/install/install-with-script",editUrl:"https://github.com/zeroone-boa/agora-cl-docs/edit/master/website/docs/install/install-with-script.md",version:"current",frontMatter:{id:"install-with-script",title:"Quickstart: Run a node and (optionally) stake BOA using Agora-cl",sidebar_label:"Quickstart: Run a node"},sidebar:"docs",previous:{title:"Table of contents",permalink:"/docs/getting-started"},next:{title:"Prepare for The Merge",permalink:"/docs/prepare-for-merge"}},Z=[{value:"Step 1: Review prerequisites and best practices",id:"step-1-review-prerequisites-and-best-practices",children:[]},{value:"Step 2: Install Agora-cl",id:"step-2-install-agora-cl",children:[]},{value:"Step 3: Run an execution client",id:"step-3-run-an-execution-client",children:[]},{value:"Step 4: Run a Agora node using Agora-cl",id:"step-4-run-a-agora-node-using-agora-cl",children:[]},{value:"Step 5: Run a validator using Agora-cl",id:"step-5-run-a-validator-using-agora-cl",children:[]},{value:"Frequently asked questions",id:"frequently-asked-questions",children:[]}],O={toc:Z};function C(e){var t=e.components,n=(0,o.Z)(e,x);return(0,l.kt)("wrapper",(0,a.Z)({},O,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("div",{class:"quickstart"},(0,l.kt)(d,{mdxType:"QuickstartIntroPartial"}),(0,l.kt)("h2",{id:"step-1-review-prerequisites-and-best-practices"},"Step 1: Review prerequisites and best practices"),(0,l.kt)(p.ZP,{mdxType:"QuickstartPrereqsPartial"}),(0,l.kt)("h2",{id:"step-2-install-agora-cl"},"Step 2: Install Agora-cl"),(0,l.kt)("div",{class:"hide-tabs"},(0,l.kt)(g,{mdxType:"QuickstartInstallAgoraPartial"}),(0,l.kt)("h2",{id:"step-3-run-an-execution-client"},"Step 3: Run an execution client"),(0,l.kt)("p",null,"In this step, you'll install an execution-layer client that Agora-cl's Agora node will connect to."),(0,l.kt)(y.ZP,{mdxType:"QuickstartRunExecutionNodeJWTPartial"}),(0,l.kt)("p",null,"Congratulations - you\u2019re now running an ",(0,l.kt)("strong",null,"execution node")," in Ethereum\u2019s execution layer."),(0,l.kt)("h2",{id:"step-4-run-a-agora-node-using-agora-cl"},"Step 4: Run a Agora node using Agora-cl"),(0,l.kt)(v.ZP,{mdxType:"QuickstartRunBeaconNodePartial"}),(0,l.kt)("h2",{id:"step-5-run-a-validator-using-agora-cl"},"Step 5: Run a validator using Agora-cl"),(0,l.kt)(w,{mdxType:"QuickstartRunValidatorPartial"}))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"frequently-asked-questions"},"Frequently asked questions"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Why do you recommend putting everything on a single machine?")," ",(0,l.kt)("br",null),"\nKeeping all of your client software on a single machine keeps things simple, which aligns with our ",(0,l.kt)("a",{parentName:"p",href:"/docs/security-best-practices"},"security best practices"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Can I use Agora-cl on a Mac M1 ARM chip?")," ",(0,l.kt)("br",null),"\nMac M1 ARM chips currently require users to run Agora-cl through ",(0,l.kt)("a",{href:"https://support.apple.com/en-us/HT211861"},"Rosetta"),". See our ",(0,l.kt)("a",{href:"https://github.com/zeroone-boa/agora-cl/issues/9385"},"open bug")," for details."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Do I need to configure JWT if I'm using IPC instead of HTTP?")," ",(0,l.kt)("br",null),"\nNo."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Do I need to configure my firewall?")," ",(0,l.kt)("br",null),"\nWe recommend ",(0,l.kt)("strong",{parentName:"p"},"closing")," TCP port ",(0,l.kt)("inlineCode",{parentName:"p"},"8545")," to the internet and keeping TCP and UDP ports ",(0,l.kt)("inlineCode",{parentName:"p"},"30303")," ",(0,l.kt)("strong",{parentName:"p"},"open")," to support other execution nodes."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Can you mix and match networks between execution layer and consensus layer?")," ",(0,l.kt)("br",null),"\nNo. See ",(0,l.kt)("a",{parentName:"p",href:"/docs/concepts/nodes-networks"},"Nodes and networks")," for more information."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Can I stake with less than 40,000 BOA?")," ",(0,l.kt)("br",null),"\nYes! ",(0,l.kt)("a",{href:"https://ethereum.org/en/staking/pools/"},"Pooled staking")," lets you stake with less than 40,000 BOA."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"What should I do if I can't run a node using my own hardware?")," ",(0,l.kt)("br",null),"\nYou can delegate hardware management to ",(0,l.kt)("a",{href:"https://ethereum.org/en/staking/saas/"},"staking as a service")," providers."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Can I use a light node with Agora-cl, or do I need to run a full execution node?")," ",(0,l.kt)("br",null),"\nNo - at this time, a full node is required."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Can I use an external SSD connected via USB?")," ",(0,l.kt)("br",null),"\nYes, but your USB connection introduces a possible point of failure. If you do this, avoid connecting your SSD to your computer through a USB hub - instead, connect it directly."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Can I use a light client as my local execution client so I don't have to download so much data?"),"  ",(0,l.kt)("br",null),"\nNo, a full execution node is needed."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Why do I need to run my own execution client?")," ",(0,l.kt)("br",null),"\nThe Merge introduces a new Engine API that allows consensus-layer clients to communicate with execution-layer clients. Teku docs contain a great explainer here: ",(0,l.kt)("a",{href:"https://docs.teku.consensys.net/en/latest/Concepts/Merge/"},"The Merge"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"What happens if my execution client goes down? Will I be penalized?")," ",(0,l.kt)("br",null),"\nYes. Downtime penalties are minimal but we recommend having uptime and downtime alerts configured for your execution node, Agora node, and validator if possible."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"My Agora node is taking a long time to sync. Is there any way I can speed it up?")," ",(0,l.kt)("br",null),"\nYes - you can use ",(0,l.kt)("a",{parentName:"p",href:"/docs/agora-cl-usage/checkpoint-sync"},"checkpoint sync")," to start your Agora node's synchronization from a checkpoint rather than from genesis. This is actually a more secure way to run your Agora node."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"My proposals aren't working, but my attestations are. What's going on?")," ",(0,l.kt)("br",null),"\nThis is usually an indication that your validator isn't able to communicate with your Agora node, or your Agora node isn't able to connect to your execution node."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"How long does it take for my validator to be selected to propose a new block?")," ",(0,l.kt)("br",null),"\nAt the time of this writing, a ballpark estimate is ",(0,l.kt)("strong",{parentName:"p"},"around a week"),". Every 12 seconds a new block is proposed, and your validator has a one in ","[total number of active validators]"," chance of being chosen, so this duration can vary significantly from one validator to the next."),(0,l.kt)(T.M,{mdxType:"RequestUpdateWidget"}))}C.isMDXComponent=!0},6884:(e,t,n)=>{n.d(t,{ZP:()=>s});var a=n(7462),o=n(3366),l=(n(7294),n(3905)),r=["components"],i={toc:[{value:"Best practices",id:"best-practices",children:[]}]};function s(e){var t=e.components,n=(0,o.Z)(e,r);return(0,l.kt)("wrapper",(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("table",null,(0,l.kt)("tr",null,(0,l.kt)("th",{style:{minWidth:"180px"}},"Node type"),(0,l.kt)("th",null,"Benefits"),(0,l.kt)("th",null,"Requirements")),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("strong",null,"Agora Execution + Agora Consensus")),(0,l.kt)("td",null,(0,l.kt)("ul",null,(0,l.kt)("li",null,"Contributes to the security of Agora's ecosystem."),(0,l.kt)("li",null,"Lets you access the Agora network directly without having to trust a third party service."),(0,l.kt)("li",null,"Lets you run a validator post-Merge."))),(0,l.kt)("td",null,(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("strong",null,"Software"),": Execution client, Agora node client (instructions for clients below), ",(0,l.kt)("a",{href:"https://curl.se/download.html"},"curl")),(0,l.kt)("li",null,(0,l.kt)("strong",null,"OS"),": 64-bit Linux, Mac OS X 10.14+, Windows 10+ 64-bit"),(0,l.kt)("li",null,(0,l.kt)("strong",null,"CPU"),": 4+ cores @ 2.8+ GHz"),(0,l.kt)("li",null,(0,l.kt)("strong",null,"Memory"),": 16GB+ RAM"),(0,l.kt)("li",null,(0,l.kt)("strong",null,"Storage"),": SSD with at least 2TB free space"),(0,l.kt)("li",null,(0,l.kt)("strong",null,"Network"),": 8 MBit/sec broadband")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("strong",null,"Validator")),(0,l.kt)("td",null,"Lets you stake BOA, propose + validate blocks, earn staking rewards + transaction fee tips."),(0,l.kt)("td",null,(0,l.kt)("ul",null,(0,l.kt)("li",null,"Everything above, plus..."),(0,l.kt)("li",null,(0,l.kt)("strong",null,"Software:")," Validator client, browser-based crypto wallet (instructions below)"),(0,l.kt)("li",null,(0,l.kt)("strong",null,"Hardware:")," (Recommended) A new machine that has never been connected to the internet that you can use to securely generate your mnemonic phrase and keypair"),(0,l.kt)("li",null,(0,l.kt)("strong",null,"40,000 BOA")," (Mainnet)"),(0,l.kt)("li",null,(0,l.kt)("strong",null,"40,000 testnet BOA")," (Testnets)"))))),(0,l.kt)("div",{class:"hidden-in-mergeprep-guide"},(0,l.kt)("h3",{id:"best-practices"},"Best practices"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"If you're staking BOA as a validator, try this guide on a testnet first"),", ",(0,l.kt)("em",{parentName:"li"},"then")," mainnet."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Keep things simple"),". This guidance assumes all client software will run on a single machine."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Review the latest advisories")," for the network(s) that you're using: ",(0,l.kt)("a",{parentName:"li",href:"https://testnet-agora-staking.bosagora.org"},"testnet"),", ",(0,l.kt)("a",{parentName:"li",href:"https://agora-staking.bosagora.org"},"Mainnet"),"."),(0,l.kt)("li",{parentName:"ul"},"Review all of our ",(0,l.kt)("a",{parentName:"li",href:"/docs/security-best-practices"},"published security best practices"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Join the community")," - join the ",(0,l.kt)("a",{parentName:"li",href:"https://t.me/bosagora_eng"},"Bosagora Telegram")," for updates and support."))))}s.isMDXComponent=!0},617:(e,t,n)=>{n.d(t,{ZP:()=>c});var a=n(7462),o=n(3366),l=(n(7294),n(3905)),r=n(5064),i=n(8215),s=["components"],u={toc:[]};function c(e){var t=e.components,n=(0,o.Z)(e,s);return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",{class:"hidden-in-jwt-guide hidden-in-mergeprep-guide"},"In this step, you'll run a Agora node using Agora-cl."),(0,l.kt)(r.Z,{groupId:"os",defaultValue:"others",values:[{label:"Windows",value:"win"},{label:"Linux, MacOS, Arm64",value:"others"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"win",mdxType:"TabItem"},(0,l.kt)(r.Z,{groupId:"network",defaultValue:"mainnet",values:[{label:"Mainnet",value:"mainnet"},{label:"Testnet",value:"testnet"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"mainnet",mdxType:"TabItem"},(0,l.kt)("p",{class:"hidden-in-jwt-guide hidden-in-mergeprep-guide"},"Use the following command to start a Agora node that connects to your local execution node:"),(0,l.kt)(r.Z,{groupId:"protocol",defaultValue:"jwt",values:[{label:"JWT",value:"jwt"},{label:"IPC",value:"ipc"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"jwt",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",null,"agora-cl.bat beacon-chain --execution-endpoint=http://localhost:8551 --jwt-secret=path/to/jwt.hex --suggested-fee-recipient=0x01234567722E6b0000012BFEBf6177F1D2e9758D9"))),(0,l.kt)(i.Z,{value:"ipc",mdxType:"TabItem"},(0,l.kt)("div",{class:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{class:"admonition-content"},(0,l.kt)("p",null,(0,l.kt)("code",null,"--http-web3provider")," is deprecated and has been replaced with ",(0,l.kt)("code",null,"--execution-endpoint"),", but IPC currently only works through ",(0,l.kt)("code",null,"--http-web3provider"),' on Windows. This will be fixed in our next release. You can safely ignore any related "deprecated flag" warnings you see in the meantime.'))),(0,l.kt)("pre",null,(0,l.kt)("code",null,"agora-cl.bat beacon-chain --http-web3provider=//./pipe/<your.ipc> --suggested-fee-recipient=0x01234567722E6b0000012BFEBf6177F1D2e9758D9"))))),(0,l.kt)(i.Z,{value:"testnet",mdxType:"TabItem"},(0,l.kt)("p",{class:"hidden-in-jwt-guide"},"Download the ",(0,l.kt)("a",{href:"https://agora-testnet.s3.ap-southeast-1.amazonaws.com/genesis.ssz"},"Testnet genesis state")," into your ",(0,l.kt)("code",null,"consensus/agora-cl")," directory. Then use the following command to start a Agora node that connects to your local execution node:"),(0,l.kt)(r.Z,{groupId:"protocol",defaultValue:"jwt",values:[{label:"JWT",value:"jwt"},{label:"IPC",value:"ipc"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"jwt",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",null,"agora-cl.bat beacon-chain --execution-endpoint=http://localhost:8551 --testnet --jwt-secret=path/to/jwt.hex --genesis-state=genesis.ssz --suggested-fee-recipient=0x01234567722E6b0000012BFEBf6177F1D2e9758D9"))),(0,l.kt)(i.Z,{value:"ipc",mdxType:"TabItem"},(0,l.kt)("div",{class:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{class:"admonition-content"},(0,l.kt)("p",null,(0,l.kt)("code",null,"--http-web3provider")," is deprecated and has been replaced with ",(0,l.kt)("code",null,"--execution-endpoint"),", but IPC currently only works through ",(0,l.kt)("code",null,"--http-web3provider"),' on Windows. This will be fixed in our next release. You can safely ignore any related "deprecated flag" warnings you see in the meantime.'))),(0,l.kt)("pre",null,(0,l.kt)("code",null,"agora-cl.bat beacon-chain --http-web3provider=//./pipe/<your.ipc> --testnet --genesis-state=genesis.ssz --suggested-fee-recipient=0x01234567722E6b0000012BFEBf6177F1D2e9758D9"))))))),(0,l.kt)(i.Z,{value:"others",mdxType:"TabItem"},(0,l.kt)(r.Z,{groupId:"network",defaultValue:"mainnet",values:[{label:"Mainnet",value:"mainnet"},{label:"Testnet",value:"testnet"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"mainnet",mdxType:"TabItem"},(0,l.kt)("p",null,"Use the following command to start a Agora node that connects to your local execution node:"),(0,l.kt)(r.Z,{groupId:"protocol",defaultValue:"jwt",values:[{label:"JWT",value:"jwt"},{label:"IPC",value:"ipc"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"jwt",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",null,"./agora-cl.sh beacon-chain --execution-endpoint=http://localhost:8551 --jwt-secret=path/to/jwt.hex --suggested-fee-recipient=0x01234567722E6b0000012BFEBf6177F1D2e9758D9"))),(0,l.kt)(i.Z,{value:"ipc",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",null,"./agora-cl.sh beacon-chain --execution-endpoint=$HOME/.ethereum/<your.ipc> --suggested-fee-recipient=0x01234567722E6b0000012BFEBf6177F1D2e9758D9"))))),(0,l.kt)(i.Z,{value:"testnet",mdxType:"TabItem"},(0,l.kt)("p",{class:"hidden-in-jwt-guide"},"Download the ",(0,l.kt)("a",{href:"https://agora-testnet.s3.ap-southeast-1.amazonaws.com/genesis.ssz"},"Testnet genesis state from Github")," into your ",(0,l.kt)("code",null,"consensus/agora-cl")," directory. Then use the following command to start a Agora node that connects to your local execution node:"),(0,l.kt)(r.Z,{groupId:"protocol",defaultValue:"jwt",values:[{label:"JWT",value:"jwt"},{label:"IPC",value:"ipc"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"jwt",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",null,"./agora-cl.sh beacon-chain --execution-endpoint=http://localhost:8551 --testnet --jwt-secret=path/to/jwt.hex --genesis-state=genesis.ssz --suggested-fee-recipient=0x01234567722E6b0000012BFEBf6177F1D2e9758D9"))),(0,l.kt)(i.Z,{value:"ipc",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",null,"./agora-cl.sh beacon-chain --execution-endpoint=$HOME/.ethereum/<your.ipc> --testnet --genesis-state=genesis.ssz --suggested-fee-recipient=0x01234567722E6b0000012BFEBf6177F1D2e9758D9")))))))),(0,l.kt)("div",{class:"hidden-in-jwt-guide hidden-in-mergeprep-guide"},(0,l.kt)("p",null,"If you're running a validator, specifying a ",(0,l.kt)("code",null,"suggested-fee-recipient")," wallet address will allow you to earn what were previously miner transaction fee tips. See ",(0,l.kt)("a",{parentName:"p",href:"/docs/execution-node/fee-recipient"},"How to configure Fee Recipient")," for more information about this feature."),(0,l.kt)("p",null,"Your Agora node will now begin syncing. This usually takes a couple days, but it can take longer depending on your network and hardware specs."),(0,l.kt)("p",{class:"hidden-in-mergeprep-guide"},"Congratulations - you\u2019re now running a ",(0,l.kt)("strong",null,"full, Merge-ready Agora node"),". To check the status of your node see [Check node and validator status]('/docs/monitoring/checking-status').")))}c.isMDXComponent=!0},6991:(e,t,n)=>{n.d(t,{ZP:()=>c});var a=n(7462),o=n(3366),l=(n(7294),n(3905)),r=n(5064),i=n(8215),s=["components"],u={toc:[]};function c(e){var t=e.components,n=(0,o.Z)(e,s);return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(r.Z,{groupId:"execution-clients",defaultValue:"agora-el",values:[{label:"Agora-el",value:"agora-el"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"Agora-el",mdxType:"TabItem"},(0,l.kt)("p",{class:"hidden-in-jwt-guide hidden-in-mergeprep-guide"},"Download and run the latest 64-bit stable release of the ",(0,l.kt)("strong",null,"Agora-el installer")," for your operating system from the ",(0,l.kt)("a",{href:"https://agora-el.bosagora.org/downloads/"},"Agora execution layer client downloads page"),"."),(0,l.kt)("p",{class:"hidden-in-jwt-guide hidden-in-mergeprep-guide"},"Navigate to your ",(0,l.kt)("code",null,"execution")," directory and run the following command to start your execution node:"),(0,l.kt)(r.Z,{groupId:"network",defaultValue:"mainnet",values:[{label:"Mainnet",value:"mainnet"},{label:"Testnet",value:"testnet"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"mainnet",mdxType:"TabItem"},(0,l.kt)(r.Z,{className:"tabs-hidden-in-jwt-guide",groupId:"protocol",defaultValue:"jwt",values:[{label:"JWT",value:"jwt"},{label:"IPC",value:"ipc"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"jwt",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",null,"geth --http --http.api eth,net,engine,admin --authrpc.jwtsecret /path/to/jwt.hex "))),(0,l.kt)(i.Z,{value:"ipc",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",null,"geth --http --http.api eth,net,engine,admin "))))),(0,l.kt)(i.Z,{value:"testnet",mdxType:"TabItem"},(0,l.kt)(r.Z,{className:"tabs-hidden-in-jwt-guide",groupId:"protocol",defaultValue:"jwt",values:[{label:"JWT",value:"jwt"},{label:"IPC",value:"ipc"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"jwt",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",null,"geth --goerli --http --http.api eth,net,engine,admin --authrpc.jwtsecret /path/to/jwt.hex "))),(0,l.kt)(i.Z,{value:"ipc",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",null,"geth --goerli --http --http.api eth,net,engine,admin ")))))),(0,l.kt)("p",null,"See Geth's ",(0,l.kt)("a",{href:"https://docs.bosagora.org/en/agora-el/command-line-options"},"command-line options")," for parameter definitions."))),(0,l.kt)("p",null,"Syncing can take a long time - from hours to days. ",(0,l.kt)("span",{class:"hidden-in-jwt-guide hidden-in-execution-guide"},"You can proceed to the next step while your execution node syncs.")))}c.isMDXComponent=!0},9926:(e,t,n)=>{n.d(t,{ZP:()=>c});var a=n(7462),o=n(3366),l=(n(7294),n(3905)),r=n(5064),i=n(8215),s=["components"],u={toc:[]};function c(e){var t=e.components,n=(0,o.Z)(e,s);return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The HTTP connection between your Agora node and execution node needs to be authenticated using a ",(0,l.kt)("a",{parentName:"p",href:"https://jwt.io/"},"JWT token"),". There are several ways to generate this JWT token:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Use an online generator like ",(0,l.kt)("a",{parentName:"li",href:"https://seanwasere.com/generate-random-hex/"},"this"),". Copy and paste this value into a ",(0,l.kt)("inlineCode",{parentName:"li"},"jwt.hex")," file."),(0,l.kt)("li",{parentName:"ul"},"Use a utility like OpenSSL to create the token via command: ",(0,l.kt)("inlineCode",{parentName:"li"},'openssl rand -hex 32 | tr -d "\\n" > "jwt.hex"'),"."),(0,l.kt)("li",{parentName:"ul"},"Use an execution client to generate the ",(0,l.kt)("inlineCode",{parentName:"li"},"jwt.hex")," file."),(0,l.kt)("li",{parentName:"ul"},"Use Agora-cl to generate the ",(0,l.kt)("inlineCode",{parentName:"li"},"jwt.hex")," file:")),(0,l.kt)(r.Z,{groupId:"os",defaultValue:"others",values:[{label:"Operating system:",value:"label"},{label:"Linux, MacOS, Arm64",value:"others"},{label:"Windows",value:"win"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{className:"unclickable-element",value:"label",mdxType:"TabItem"}),(0,l.kt)(i.Z,{value:"win",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"## Optional. This command is necessary only if you've previously configured USE_PRYSM_VERSION\nSET USE_PRYSM_VERSION=v3.1.1\n\n## Required.\nagora-cl.bat beacon-chain generate-auth-secret\n"))),(0,l.kt)(i.Z,{value:"others",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"## Optional. This command is necessary only if you've previously configured USE_PRYSM_VERSION\nUSE_PRYSM_VERSION=v3.1.1\n\n## Required.\n./agora-cl.sh beacon-chain generate-auth-secret\n")))),(0,l.kt)("p",null,"Agora-cl will output a ",(0,l.kt)("inlineCode",{parentName:"p"},"jwt.hex")," file path."),(0,l.kt)("div",{class:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{class:"admonition-content"},(0,l.kt)("p",null,"Ensure that the script, user, or terminal window used to create and access your JWT token has the permissions it needs. Windows users may need to run command windows as Administrator."))))}c.isMDXComponent=!0},7033:(e,t,n)=>{n.d(t,{ZP:()=>m});var a=n(7462),o=n(3366),l=n(7294),r=n(3905),i=n(5064),s=n(8215),u=n(1262),c=function(){var e=function(){return document.querySelectorAll(".quickstart-tabs .tabs__item")},t=function(t){var n;return e().forEach((function(e){e.innerHTML==t&&(n=e)})),n},n=function(e){t(e).classList.add("disabled-tab")},a=function(e){console.log("selecting "+e+"..."),t(e).click()},o=function(e){return t(e).classList.contains("tabs__item--active")},r=function(){return window.location.href.indexOf("/authentication")>-1},i=function(){var e,t,n,a;e=o("Windows")?"Windows":"Linux, MacOS, Arm64",o("Mainnet")?t="Mainnet":o("Testnet")&&(t="Testnet"),o("Agora-el")&&(n="Agora-el"),a=o("IPC")?"IPC":"HTTP-JWT";var l=document.querySelector(".quickstart-tabs");l.dataset.selectedOS=e,l.dataset.selectedNetwork=t,l.dataset.selectedEL=n,l.dataset.selectedENBN=a},s=function(){setTimeout((function(){r()&&(setTimeout((function(){a("HTTP-JWT"),i()}),50),n("IPC")),e().forEach((function(e){e.textContent.indexOf(":")>-1?e.outerHTML=e.outerHTML:e.addEventListener("click",(function(e){var o=e.target,l=o.textContent;"Agora-el"==l?t("IPC").classList.remove("disabled-tab"):"IPC"==l&&(r()?(setTimeout((function(){a("HTTP-JWT")}),50),n("IPC")):a("Agora-el")),function(e){var t=e.parentElement;t.classList.remove("updated"),t.classList.add("updated"),setTimeout((function(){t.classList.remove("updated")}),2e3)}(o),i()}),!1)})),i()}),100)};return l.createElement(u.Z,null,(function(){s()}))},d=["components"],p={toc:[]};function m(e){var t=e.components,n=(0,o.Z)(e,d);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(c,{mdxType:"MultiDimensionalContentWidget"}),(0,r.kt)("div",{class:"quickstart-tabs"},(0,r.kt)(i.Z,{className:"tabgroup-with-label os-tabgroup",groupId:"os",defaultValue:"others",values:[{label:"Operating system:",value:"label"},{label:"Linux, MacOS, Arm64",value:"others"},{label:"Windows",value:"win"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{className:"unclickable-element",value:"label",mdxType:"TabItem"}),(0,r.kt)(s.Z,{value:"others",mdxType:"TabItem"}),(0,r.kt)(s.Z,{value:"win",mdxType:"TabItem"})),(0,r.kt)(i.Z,{className:"tabgroup-with-label network-tabgroup",groupId:"network",defaultValue:"mainnet",values:[{label:"Network:",value:"label"},{label:"Mainnet",value:"mainnet"},{label:"Testnet",value:"testnet"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{className:"unclickable-element",value:"label",mdxType:"TabItem"}),(0,r.kt)(s.Z,{value:"mainnet",mdxType:"TabItem"}),(0,r.kt)(s.Z,{value:"testnet",mdxType:"TabItem"})),(0,r.kt)(i.Z,{className:"tabgroup-with-label hidden-in-docker-guide el-tabgroup",groupId:"execution-clients",defaultValue:"geth",values:[{label:"Execution client:",value:"label"},{label:"Agora-el",value:"agora-el"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{className:"unclickable-element",value:"label",mdxType:"TabItem"}),(0,r.kt)(s.Z,{value:"agora-el",mdxType:"TabItem"})),(0,r.kt)(i.Z,{className:"tabgroup-with-label hidden-in-jwt-guide hidden-in-docker-guide enbn-tabgroup",groupId:"protocol",defaultValue:"jwt",values:[{label:"EN-BN connection:",value:"label"},{label:"HTTP-JWT",value:"jwt"},{label:"IPC",value:"ipc"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{className:"unclickable-element",value:"label",mdxType:"TabItem"}),(0,r.kt)(s.Z,{value:"jwt",mdxType:"TabItem"}),(0,r.kt)(s.Z,{value:"ipc",mdxType:"TabItem"}))))}m.isMDXComponent=!0},6010:(e,t,n)=>{function a(e){var t,n,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(o&&(o+=" "),o+=n);else for(t in e)e[t]&&(o&&(o+=" "),o+=t);return o}function o(){for(var e,t,n=0,o="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(o&&(o+=" "),o+=t);return o}n.d(t,{Z:()=>o})},7237:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/client-stack-14ace48dfcb4ed2abf997e09efa20bf2.png"}}]);