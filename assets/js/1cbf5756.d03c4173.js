"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8584],{4334:(e,t,n)=>{function a(e){var t,n,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(o&&(o+=" "),o+=n);else for(t in e)e[t]&&(o&&(o+=" "),o+=t);return o}n.d(t,{Z:()=>o});const o=function(){for(var e,t,n=0,o="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(o&&(o+=" "),o+=t);return o}},3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),h=o,m=p["".concat(i,".").concat(h)]||p[h]||d[h]||s;return n?a.createElement(m,r(r({ref:t},u),{},{components:n})):a.createElement(m,r({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,r=new Array(s);r[0]=p;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var c=2;c<s;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1262:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(7294),o=n(2263);const s=function(e){var t=e.children,n=e.fallback;return(0,o.Z)().isClient&&null!=t?a.createElement(a.Fragment,null,t()):n||null}},8215:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294);const o=function(e){var t=e.children,n=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:o},t)}},5064:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(7294),o=n(9443);const s=function(){var e=(0,a.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e};var r=n(4334);const l="tabItem_vU9c",i="tabItemActive_cw6a";var c=37,u=39;const d=function(e){var t=e.lazy,n=e.block,o=e.defaultValue,d=e.values,p=e.groupId,h=e.className,m=s(),k=m.tabGroupChoices,b=m.setTabGroupChoices,g=(0,a.useState)(o),f=g[0],v=g[1],y=a.Children.toArray(e.children),T=[];if(null!=p){var w=k[p];null!=w&&w!==f&&d.some((function(e){return e.value===w}))&&v(w)}var x=function(e){var t=e.currentTarget,n=T.indexOf(t),a=d[n].value;v(a),null!=p&&(b(p,a),setTimeout((function(){var e,n,a,o,s,r,l,c;(e=t.getBoundingClientRect(),n=e.top,a=e.left,o=e.bottom,s=e.right,r=window,l=r.innerHeight,c=r.innerWidth,n>=0&&s<=c&&o<=l&&a>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(i),setTimeout((function(){return t.classList.remove(i)}),2e3))}),150))},I=function(e){var t,n;switch(e.keyCode){case u:var a=T.indexOf(e.target)+1;n=T[a]||T[0];break;case c:var o=T.indexOf(e.target)-1;n=T[o]||T[T.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},h)},d.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:f===t?0:-1,"aria-selected":f===t,className:(0,r.Z)("tabs__item",l,{"tabs__item--active":f===t}),key:t,ref:function(e){return T.push(e)},onKeyDown:I,onFocus:x,onClick:x},n)}))),t?(0,a.cloneElement)(y.filter((function(e){return e.props.value===f}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},y.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==f})}))))}},9443:(e,t,n)=>{n.d(t,{Z:()=>a});const a=(0,n(7294).createContext)(void 0)},5505:(e,t,n)=>{n.d(t,{M:()=>s});var a=n(7294),o=n(1262),s=function(e){var t=e.commaDelimitedContributors,n=e.lastVerifiedDateString,s=e.lastVerifiedVersionString,r={Chris:"hewison-chris"},l=function(e){return a.createElement("a",{class:"header-badge",href:"https://github.com/"+r[e]},a.createElement("span",{class:"badge-avatar",style:{backgroundImage:"url('https://avatars.githubusercontent.com/"+r[e]+"')"}}),a.createElement("span",{class:"badge-label"},e))};return a.createElement(o.Z,null,(function(){return a.createElement("div",{class:"header-badges"},null!=t?t.split(",").map(l):null,function(e,t){if(null!=e&&null!=t)return a.createElement("a",{class:"header-badge"},a.createElement("span",{class:"badge-avatar emoji-avatar"},"\u2714\ufe0f"),a.createElement("span",{class:"badge-label"},"Last verified on ",a.createElement("strong",null,e)," using Agora-cl ",t))}(n,s),a.createElement("a",{class:"header-badge",href:"https://github.com/Bosagora/documentation/issues/new?title=Docs update request: "+new URL(window.location.href).pathname+"&body=Source: "+window.location.href+"%0A%0ARequest: (how can we help?)"},a.createElement("span",{class:"badge-avatar emoji-avatar"},"\u270f\ufe0f"),a.createElement("span",{class:"badge-label"},"Request an update")))}))}},1144:(e,t,n)=>{n.d(t,{M:()=>s});var a=n(7294),o=n(1262),s=function(e){return function(e){if(null==e)throw new TypeError("Cannot destructure undefined")}(e),a.createElement(o.Z,null,(function(){return a.createElement("div",{class:"update-request"},a.createElement("a",{href:"https://https://github.com/zeroone-boa/agora-cl-docs/issues/new?title=Docs update request: "+new URL(window.location.href).pathname+"&body=Source: "+window.location.href+"%0A%0ARequest: (how can we help?)"},"\ud83d\udc3c Request an update"))}))}},9153:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>p,default:()=>b,frontMatter:()=>d,metadata:()=>h,toc:()=>m});var a=n(7462),o=n(3366),s=(n(7294),n(3905)),r=(n(5064),n(8215),n(5505)),l=n(610),i=n(8595),c=n(1144),u=["components"],d={id:"checking-status",title:"Check node and validator status",sidebar_label:"Check node and validator status"},p=void 0,h={unversionedId:"monitoring/checking-status",id:"monitoring/checking-status",isDocsHomePage:!1,title:"Check node and validator status",description:"Select a configuration",source:"@site/docs/monitoring/checking-status.md",sourceDirName:"monitoring",slug:"/monitoring/checking-status",permalink:"/docs/monitoring/checking-status",editUrl:"https://github.com/zeroone-boa/agora-cl-docs/edit/master/website/docs/monitoring/checking-status.md",version:"current",frontMatter:{id:"checking-status",title:"Check node and validator status",sidebar_label:"Check node and validator status"},sidebar:"docs",previous:{title:"Command-line options",permalink:"/docs/agora-cl-usage/parameters"},next:{title:"Troubleshooting",permalink:"/docs/troubleshooting/issues-errors"}},m=[{value:"Select a configuration",id:"select-a-configuration",children:[]},{value:"Status checklist",id:"status-checklist",children:[]}],k={toc:m};function b(e){var t=e.components,n=(0,o.Z)(e,u);return(0,s.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)(r.M,{lastVerifiedDateString:"September 12th, 2022",lastVerifiedVersionString:"v3.1.1",mdxType:"HeaderBadgesWidget"}),(0,s.kt)("div",{class:"status-guide"},(0,s.kt)("h2",{id:"select-a-configuration"},"Select a configuration"),(0,s.kt)(l.ZP,{mdxType:"MultidimensionalContentControlsPartial"}),(0,s.kt)("h2",{id:"status-checklist"},"Status checklist"),(0,s.kt)("p",null,"Use the following checklist to check the status of your nodes and validators. If you run into issues, generate a ",(0,s.kt)("strong",{parentName:"p"},"troubleshooting report")," using our ",(0,s.kt)("a",{parentName:"p",href:"/docs/troubleshooting/issues-errors"},"troubleshooting checklist"),"."),(0,s.kt)(i.ZP,{mdxType:"StatusChecklistPartial"}),(0,s.kt)("p",null,"Running into unexpected output? Generate a ",(0,s.kt)("strong",{parentName:"p"},"troubleshooting report")," using our ",(0,s.kt)("a",{parentName:"p",href:"/docs/troubleshooting/issues-errors"},"troubleshooting checklist")," and share it with us on ",(0,s.kt)("a",{parentName:"p",href:"https://t.me/bosagora_eng"},"Telegram"),".")),(0,s.kt)("br",null),(0,s.kt)(c.M,{mdxType:"RequestUpdateWidget"}))}b.isMDXComponent=!0},8595:(e,t,n)=>{n.d(t,{ZP:()=>u});var a=n(7462),o=n(3366),s=(n(7294),n(3905)),r=n(5064),l=n(8215),i=["components"],c={toc:[]};function u(e){var t=e.components,n=(0,o.Z)(e,i);return(0,s.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("div",{class:"hide-tabs"},(0,s.kt)("div",{class:"checklist"},(0,s.kt)("div",{class:"task"},(0,s.kt)("div",{class:"input-container"},(0,s.kt)("input",{id:"tc-1",type:"checkbox"}),(0,s.kt)("span",{class:"done"})),(0,s.kt)("div",{class:"guidance-container"},(0,s.kt)("label",{for:"tc-1"},"1. Select a configuration above"),(0,s.kt)("p",null,"If you end up generating a troubleshooting report, your report will include your selected configuration."))),(0,s.kt)("div",{class:"task"},(0,s.kt)("div",{class:"input-container"},(0,s.kt)("input",{id:"tc-2",type:"checkbox"}),(0,s.kt)("span",{class:"done"})),(0,s.kt)("div",{class:"guidance-container"},(0,s.kt)("label",{for:"tc-2"},"2. Prepare for The Merge"),(0,s.kt)("p",null,"Many common issues are resolved by the steps in our ",(0,s.kt)("a",{target:"_blank",href:"../prepare-for-merge"},"Prepare for The Merge")," checklist. We recommend completing this Merge preparation checklist before proceeding here."))),(0,s.kt)("div",{class:"task"},(0,s.kt)("div",{class:"input-container"},(0,s.kt)("input",{id:"st-1",type:"checkbox"}),(0,s.kt)("span",{class:"done"})),(0,s.kt)("div",{class:"guidance-container"},(0,s.kt)("label",{for:"st-1"},"3. Execution node sync status"),(0,s.kt)("p",null,(0,s.kt)(r.Z,{groupId:"execution-clients",defaultValue:"geth",values:[{label:"Execution client:",value:"label"},{label:"Nethermind",value:"nethermind"},{label:"Besu",value:"besu"},{label:"Geth",value:"geth"}],mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"nethermind",mdxType:"TabItem"},(0,s.kt)("p",null,"You can ",(0,s.kt)("a",{href:"https://docs.nethermind.io/nethermind/ethereum-client/monitoring-node-health"},"check your Nethermind execution node's sync status")," by navigating to ",(0,s.kt)("a",{href:"http://localhost:8545/healthchecks-ui"},(0,s.kt)("code",null,"http://localhost:8545/healthchecks-ui"))," or by running ",(0,s.kt)("code",null,"curl localhost:8545/health")," from a separate terminal window. A sync status of ",(0,s.kt)("code",null,"false")," indicates that your node is fully synced. ")),(0,s.kt)(l.Z,{value:"besu",mdxType:"TabItem"},(0,s.kt)(r.Z,{className:"tabgroup-with-label",groupId:"os",defaultValue:"others",values:[{label:"Operating system:",value:"label"},{label:"Linux, MacOS, Arm64",value:"others"},{label:"Windows",value:"win"}],mdxType:"Tabs"},(0,s.kt)(l.Z,{className:"unclickable-element",value:"label",mdxType:"TabItem"}),(0,s.kt)(l.Z,{value:"others",mdxType:"TabItem"},(0,s.kt)("p",null,"You can ",(0,s.kt)("a",{href:"https://besu.hyperledger.org/en/stable/Reference/API-Methods/#eth_syncing"},"check your Besu execution node's sync status")," by running ",(0,s.kt)("code",null,'curl -H \'Content-Type: application/json\' -X POST http://localhost:8545 -d \'{"jsonrpc":"2.0","method":"eth_syncing","params":[],"id":51}\'')," from a separate terminal window. A sync status of ",(0,s.kt)("code",null,"false")," indicates that your node is fully synced.")),(0,s.kt)(l.Z,{value:"win",mdxType:"TabItem"},(0,s.kt)("p",null,"You can ",(0,s.kt)("a",{href:"https://besu.hyperledger.org/en/stable/Reference/API-Methods/#eth_syncing"},"check your Besu execution node's sync status")," by running ",(0,s.kt)("code",null,'curl -H "Content-Type: application/json" -X POST http://localhost:8545 -d "{""jsonrpc"":""2.0"",""method"":""eth_syncing"",""params"":[],""id"":51}"')," from a separate terminal window. A sync status of ",(0,s.kt)("code",null,"false")," indicates that your node is fully synced.")))),(0,s.kt)(l.Z,{value:"geth",mdxType:"TabItem"},(0,s.kt)(r.Z,{className:"tabgroup-with-label",groupId:"os",defaultValue:"others",values:[{label:"Operating system:",value:"label"},{label:"Linux, MacOS, Arm64",value:"others"},{label:"Windows",value:"win"}],mdxType:"Tabs"},(0,s.kt)(l.Z,{className:"unclickable-element",value:"label",mdxType:"TabItem"}),(0,s.kt)(l.Z,{value:"others",mdxType:"TabItem"},(0,s.kt)("p",null,"You can check your Geth execution node's sync status by running ",(0,s.kt)("code",null,"geth attach")," and then ",(0,s.kt)("code",null,"eth.syncing")," from a separate terminal window. A sync status of ",(0,s.kt)("code",null,"false")," indicates that your node is fully synced.")),(0,s.kt)(l.Z,{value:"win",mdxType:"TabItem"},(0,s.kt)("p",null,"You can check your Geth execution node's sync status by running ",(0,s.kt)("code",null,"geth attach ipc:\\\\.\\pipe\\geth.ipc")," and then ",(0,s.kt)("code",null,"eth.syncing")," from a separate terminal window. A sync status of ",(0,s.kt)("code",null,"false")," indicates that your node is fully synced.")))))))),(0,s.kt)("div",{class:"task"},(0,s.kt)("div",{class:"input-container"},(0,s.kt)("input",{id:"st-2",type:"checkbox"}),(0,s.kt)("span",{class:"done"})),(0,s.kt)("div",{class:"guidance-container"},(0,s.kt)("label",{for:"st-2"},"4. Execution node peer connectivity"),(0,s.kt)("p",null,(0,s.kt)(r.Z,{groupId:"execution-clients",defaultValue:"geth",values:[{label:"Execution client:",value:"label"},{label:"Nethermind",value:"nethermind"},{label:"Besu",value:"besu"},{label:"Geth",value:"geth"}],mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"nethermind",mdxType:"TabItem"},(0,s.kt)("p",null,"You can ",(0,s.kt)("a",{href:"https://docs.nethermind.io/nethermind/ethereum-client/monitoring-node-health"},"check your Nethermind execution node's peer connectivity")," by navigating to ",(0,s.kt)("a",{href:"http://localhost:8545/healthchecks-ui"},(0,s.kt)("code",null,"http://localhost:8545/healthchecks-ui"))," or by running ",(0,s.kt)("code",null,"curl localhost:8545/health")," a separate terminal window. A health status of ",(0,s.kt)("code",null,"Healthy")," indicates that your node is connected to peers.")),(0,s.kt)(l.Z,{value:"besu",mdxType:"TabItem"},(0,s.kt)("p",null,"You should periodically see more than a few peers reported through Besu's log output. Refer to Besu's ",(0,s.kt)("a",{href:"https://besu.hyperledger.org/en/stable/public-networks/how-to/connect/manage-peers/#monitor-peer-connections"},"Monitor peer connections")," documentation for more detailed peer health monitoring guidance.")),(0,s.kt)(l.Z,{value:"geth",mdxType:"TabItem"},(0,s.kt)("p",null,"You should periodically see more than a few peers reported through Geth's log output. Look for output in the format of ",(0,s.kt)("code",null,"peercount=12"),". Refer to Geth's ",(0,s.kt)("a",{href:"https://geth.ethereum.org/docs/interface/peer-to-peer"},"Connecting To The Network")," documentation for more detailed peer health monitoring guidance.")))))),(0,s.kt)("div",{class:"task"},(0,s.kt)("div",{class:"input-container"},(0,s.kt)("input",{id:"st-3",type:"checkbox"}),(0,s.kt)("span",{class:"done"})),(0,s.kt)("div",{class:"guidance-container"},(0,s.kt)("label",{for:"st-3"},"5. Execution node version"),(0,s.kt)("p",null,(0,s.kt)(r.Z,{className:"tabgroup-with-label",groupId:"execution-clients",defaultValue:"geth",values:[{label:"Execution client:",value:"label"},{label:"Geth",value:"geth"},{label:"Nethermind",value:"nethermind"},{label:"Besu",value:"besu"}],mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"geth",mdxType:"TabItem"},"Use ",(0,s.kt)("code",null,"geth version")," to check Geth's version. See ",(0,s.kt)("a",{href:"https://github.com/ethereum/go-ethereum/releases"},"Geth's releases page")," and join ",(0,s.kt)("a",{href:"https://discord.gg/invite/nthXNEv"},"their Discord")," to stay up to date as we approach Mainnet Merge."),(0,s.kt)(l.Z,{value:"nethermind",mdxType:"TabItem"},"Review Nethermind's log output to see what version you're using. See ",(0,s.kt)("a",{href:"https://github.com/NethermindEth/nethermind/releases"},"Nethermind's releases page")," and join ",(0,s.kt)("a",{href:"https://discord.com/invite/DedCdvDaNm"},"their Discord")," to stay up to date as we approach Mainnet Merge."),(0,s.kt)(l.Z,{value:"besu",mdxType:"TabItem"},"Review Besu's log output to see what version you're using. See Besu's ",(0,s.kt)("a",{href:"https://github.com/hyperledger/besu/releases"},"releases page")," and join ",(0,s.kt)("a",{href:"https://discord.com/invite/hyperledger"},"their Discord")," to stay up to date as we approach Mainnet Merge."))))),(0,s.kt)("div",{class:"task"},(0,s.kt)("div",{class:"input-container"},(0,s.kt)("input",{id:"st-4",type:"checkbox"}),(0,s.kt)("span",{class:"done"})),(0,s.kt)("div",{class:"guidance-container"},(0,s.kt)("label",{for:"st-4"},"6. Beacon node sync status"),(0,s.kt)("p",null,"You can check your Agora node's ",(0,s.kt)("a",{href:"https://ethereum.github.io/beacon-APIs/?urls.primaryName=dev#/Node/getSyncingStatus"},"sync status")," by running ",(0,s.kt)("code",null,"curl http://localhost:3500/eth/v1/node/syncing | jq")," from a separate terminal window. When you see ",(0,s.kt)("code",null,'"is_syncing":false'),", your Agora node is fully synchronized with the Agora chain. When you see ",(0,s.kt)("code",null,'"is_optimistic":false'),", your Agora node sees that your execution node is either 1) not yet started, 2) hasn't synced past the merge block or 3) fully synchronized with the execution-layer blockchain."))),(0,s.kt)("div",{class:"task"},(0,s.kt)("div",{class:"input-container"},(0,s.kt)("input",{id:"st-5",type:"checkbox"}),(0,s.kt)("span",{class:"done"})),(0,s.kt)("div",{class:"guidance-container"},(0,s.kt)("label",{for:"st-5"},"7. Beacon node peer connectivity"),(0,s.kt)("p",null,"You should periodically see more than a few peers reported through your Agora node's log output. Look for output in the format of ",(0,s.kt)("code",null,"peers=12"),". You can issue ",(0,s.kt)("code",null,"curl http://localhost:8080/healthz")," from a separate terminal window to check connectivity status. If you see ",(0,s.kt)("code",null,"currentConnectionError: no contract code at given address"),", your execution node may still be syncing. Otherwise, if you don't see any errors, your Agora node is connected to peers."))),(0,s.kt)("div",{class:"task"},(0,s.kt)("div",{class:"input-container"},(0,s.kt)("input",{id:"st-6",type:"checkbox"}),(0,s.kt)("span",{class:"done"})),(0,s.kt)("div",{class:"guidance-container"},(0,s.kt)("label",{for:"st-6"},"8. Beacon node version"),(0,s.kt)("p",null,"Ensure that you're using the ",(0,s.kt)("a",{href:"https://github.com/zeroone-boa/agora-cl/releases"},"latest stable Agora-cl release"),". Check Agora-cl's version by issuing the following command: ",(0,s.kt)("code",null,"agora-cl.sh beacon-chain --version")," (Linux) ",(0,s.kt)("code",null,"agora-cl.bat beacon-chain --version")," (Windows)."))),(0,s.kt)("div",{class:"task"},(0,s.kt)("div",{class:"input-container"},(0,s.kt)("input",{id:"st-7",type:"checkbox"}),(0,s.kt)("span",{class:"done"})),(0,s.kt)("div",{class:"guidance-container"},(0,s.kt)("label",{for:"st-7"},"9. Beacon node \u2194 execution node connectivity"),(0,s.kt)("p",null,"Issue ",(0,s.kt)("code",null,"curl http://localhost:3500/eth/v1alpha1/node/eth1/connections")," from a separate terminal window. If you see ",(0,s.kt)("code",null,"currentConnectionError: no contract code at given address"),', your execution node may still be syncing. Otherwise, if you don\'t see any errors, your Agora node is connected to your execution node. This output can be interpreted as "EN-BN connection is healthy": ',(0,s.kt)("code",null,'{"currentAddress":"http://localhost:8551","currentConnectionError":"","addresses":["http://localhost:8551"],"connectionErrors":[]}')))),(0,s.kt)("div",{class:"task"},(0,s.kt)("div",{class:"input-container"},(0,s.kt)("input",{id:"st-8",type:"checkbox"}),(0,s.kt)("span",{class:"done"})),(0,s.kt)("div",{class:"guidance-container"},(0,s.kt)("label",{for:"st-8"},"10. Fee recipient configuration"),(0,s.kt)("p",null,"Agora-cl will output an error if you attempt to provide an invalid Ethereum wallet address as a fee recipient address. You'll see warnings if a fee recipient address hasn't been provided. See ",(0,s.kt)("a",{href:"../execution-node/fee-recipient"},"Configure Fee Recipient")," for more information."))),(0,s.kt)("div",{class:"task"},(0,s.kt)("div",{class:"input-container"},(0,s.kt)("input",{id:"st-9",type:"checkbox"}),(0,s.kt)("span",{class:"done"})),(0,s.kt)("div",{class:"guidance-container"},(0,s.kt)("label",{for:"st-9"},"11. Validator status"),(0,s.kt)("p",null,(0,s.kt)(r.Z,{className:"tabgroup-with-label",groupId:"network",defaultValue:"mainnet",values:[{label:"Network:",value:"label"},{label:"Mainnet",value:"mainnet"},{label:"Testnet",value:"testnet"}],mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"mainnet",mdxType:"TabItem"},"Paste your validator's public key (available in your ",(0,s.kt)("code",null,"deposit_data-*.json")," file) into a ",(0,s.kt)("a",{href:"https://agorascan.io"},"blockchain explorer like beaconcha.in")," to check the status of your validator."),(0,s.kt)(l.Z,{value:"testnet",mdxType:"TabItem"},"Paste your validator's public key (available in your ",(0,s.kt)("code",null,"deposit_data-*.json")," file) into a ",(0,s.kt)("a",{href:"https://testnet-agorascan.io"},"Testnet blockchain explorer like beaconcha.in")," to check the status of your validator."))))),(0,s.kt)("div",{class:"task hidden-in-status-guide"},(0,s.kt)("div",{class:"input-container"},(0,s.kt)("input",{id:"st-10",type:"checkbox"}),(0,s.kt)("span",{class:"done"})),(0,s.kt)("div",{class:"guidance-container"},(0,s.kt)("label",{for:"st-10"},"12. Troubleshooting scenarios and solutions"),(0,s.kt)("p",null,"Running into unexpected output, warnings, or errors? Although this is unintuitive, ",(0,s.kt)("strong",null,"many errors and warnings are expected")," and have been identified in the below list of troubleshooting scenarios and solutions. We gratefully ask that you review this before asking for support."))),(0,s.kt)("div",{class:"task hidden-in-status-guide"},(0,s.kt)("div",{class:"input-container"},(0,s.kt)("input",{id:"st-11",type:"checkbox"}),(0,s.kt)("span",{class:"done"})),(0,s.kt)("div",{class:"guidance-container"},(0,s.kt)("label",{for:"st-11"},"13. Troubleshooting report"),(0,s.kt)("p",null,"Issue still not resolved? ",(0,s.kt)("a",{href:"#generate-troubleshooting-report"},"Generate a troubleshooting report below"),". Head over to ",(0,s.kt)("a",{href:"https://t.me/bosagora_eng"},"Discord")," and paste your report for additional troubleshooting assistance."))))))}u.isMDXComponent=!0},610:(e,t,n)=>{n.d(t,{ZP:()=>h});var a=n(7462),o=n(3366),s=n(7294),r=n(3905),l=n(5064),i=n(8215),c=n(1262),u=function(){var e=function(){return document.querySelectorAll(".quickstart-tabs .tabs__item")},t=function(t){var n;return e().forEach((function(e){e.innerHTML==t&&(n=e)})),n},n=function(e){t(e).classList.add("disabled-tab")},a=function(e){console.log("selecting "+e+"..."),t(e).click()},o=function(e){return t(e).classList.contains("tabs__item--active")},r=function(){return window.location.href.indexOf("/authentication")>-1},l=function(){var e,t,n,a;e=o("Windows")?"Windows":"Linux, MacOS, Arm64",o("Mainnet")?t="Mainnet":o("Testnet")&&(t="Testnet"),o("Agora-el")&&(n="Agora-el"),a=o("IPC")?"IPC":"HTTP-JWT";var s=document.querySelector(".quickstart-tabs");s.dataset.selectedOS=e,s.dataset.selectedNetwork=t,s.dataset.selectedEL=n,s.dataset.selectedENBN=a},i=function(){setTimeout((function(){r()&&(setTimeout((function(){a("HTTP-JWT"),l()}),50),n("IPC")),e().forEach((function(e){e.textContent.indexOf(":")>-1?e.outerHTML=e.outerHTML:e.addEventListener("click",(function(e){var o=e.target,s=o.textContent;"Agora-el"==s?t("IPC").classList.remove("disabled-tab"):"IPC"==s&&(r()?(setTimeout((function(){a("HTTP-JWT")}),50),n("IPC")):a("Agora-el")),function(e){var t=e.parentElement;t.classList.remove("updated"),t.classList.add("updated"),setTimeout((function(){t.classList.remove("updated")}),2e3)}(o),l()}),!1)})),l()}),100)};return s.createElement(c.Z,null,(function(){i()}))},d=["components"],p={toc:[]};function h(e){var t=e.components,n=(0,o.Z)(e,d);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(u,{mdxType:"MultiDimensionalContentWidget"}),(0,r.kt)("div",{class:"quickstart-tabs"},(0,r.kt)(l.Z,{className:"tabgroup-with-label os-tabgroup",groupId:"os",defaultValue:"others",values:[{label:"Operating system:",value:"label"},{label:"Linux, MacOS, Arm64",value:"others"},{label:"Windows",value:"win"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{className:"unclickable-element",value:"label",mdxType:"TabItem"}),(0,r.kt)(i.Z,{value:"others",mdxType:"TabItem"}),(0,r.kt)(i.Z,{value:"win",mdxType:"TabItem"})),(0,r.kt)(l.Z,{className:"tabgroup-with-label network-tabgroup",groupId:"network",defaultValue:"mainnet",values:[{label:"Network:",value:"label"},{label:"Mainnet",value:"mainnet"},{label:"Testnet",value:"testnet"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{className:"unclickable-element",value:"label",mdxType:"TabItem"}),(0,r.kt)(i.Z,{value:"mainnet",mdxType:"TabItem"}),(0,r.kt)(i.Z,{value:"testnet",mdxType:"TabItem"})),(0,r.kt)(l.Z,{className:"tabgroup-with-label hidden-in-docker-guide el-tabgroup",groupId:"execution-clients",defaultValue:"geth",values:[{label:"Execution client:",value:"label"},{label:"Agora-el",value:"agora-el"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{className:"unclickable-element",value:"label",mdxType:"TabItem"}),(0,r.kt)(i.Z,{value:"agora-el",mdxType:"TabItem"})),(0,r.kt)(l.Z,{className:"tabgroup-with-label hidden-in-jwt-guide hidden-in-docker-guide enbn-tabgroup",groupId:"protocol",defaultValue:"jwt",values:[{label:"EN-BN connection:",value:"label"},{label:"HTTP-JWT",value:"jwt"},{label:"IPC",value:"ipc"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{className:"unclickable-element",value:"label",mdxType:"TabItem"}),(0,r.kt)(i.Z,{value:"jwt",mdxType:"TabItem"}),(0,r.kt)(i.Z,{value:"ipc",mdxType:"TabItem"}))))}h.isMDXComponent=!0}}]);